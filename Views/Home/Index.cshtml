@using BugBanisher.Models.ViewModels;

@model DashboardViewModel

@inject IProjectService ProjectService
@inject IFileService FileService

<section class="section dashboard">
	<div class="d-flex row justify-content-center">
		<div class="col-lg-11">

			<div class="pagetitle">
				<h1>Dashboard</h1>
				<nav>
					<ol class="breadcrumb">
						<li class="breadcrumb-item">Company</li>
						<li class="breadcrumb-item active">Dashboard</li>
					</ol>
				</nav>
			</div>

			<div class="row">

				<!-- Projects Card -->
				<div class="col-xxl-4 col-md-6">
					<div class="card info-card sales-card">

						<div class="card-body">
							<h5 class="card-title">Projects <span>| Active</span></h5>

							<div class="d-flex align-items-center">
								<div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
									<i class="bi bi-pc-display-horizontal"></i>
								</div>
								<div class="ps-3">
									<span class="small pt-1 fw-bold">@Model.ActiveProjects.Count()</span> <span class="text-muted small pt-2 ps-1">active</span><br />
									<span class="small pt-1 fw-bold">@Model.ActiveProjects.Where(p => p.ProjectManagerId is null).Count()</span> <span class="text-muted small pt-2 ps-1">no PM assigned</span><br />
									<span class="small pt-1 fw-bold">@Model.ActiveProjects.Where(p => (p.Deadline - DateTime.Now) < new TimeSpan(30,0,0,0)).Count()</span> <span class="text-muted small pt-2 ps-1">deadline &lt; 1 month</span><br />
									<span class="small pt-1 fw-bold">@Model.ActiveProjects.Where(p => (p.Deadline - DateTime.Now) < new TimeSpan(7, 0, 0, 0)).Count()</span> <span class="text-muted small pt-2 ps-1">deadline &lt; 1 week</span>
								</div>
							</div>
						</div>

					</div>
				</div>

				<!-- Tickets Card -->
				<div class="col-xxl-4 col-md-6">
					<div class="card info-card revenue-card">

						<div class="card-body">
							<h5 class="card-title">Tickets <span>| Outstanding</span></h5>

							<div class="d-flex align-items-center">
								<div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
									<i class="bi bi-ticket-detailed-fill"></i>
								</div>
								<div class="ps-3">
									<span class="small pt-1 fw-bold">@Model.OpenTickets.Count()</span> <span class="text-muted small pt-2 ps-1">open</span><br />
									<span class="small pt-1 fw-bold">@Model.OpenTickets.Where(t => (t.DeveloperId is null || t.TicketStatusId == "hold" || t.TicketStatusId == "pending")).Count()</span> <span class="text-muted small pt-2 ps-1">action required</span><br />
									<span class="small pt-1 fw-bold">@Model.OpenTickets.Where(t => (t.TicketPriorityId == "high")).Count()</span> <span class="text-muted small pt-2 ps-1">high priority</span><br />
									<span class="small pt-1 fw-bold">@Model.CompletedTickets.Count()</span> <span class="text-muted small pt-2 ps-1">ready to archive</span><br />
								</div>
							</div>
						</div>

					</div>
				</div>

				@if (User.IsInRole(nameof(Roles.Admin)))
				{
					<!-- Employees Card -->
					<div class="col-xxl-4 col-xl-12">

						<div class="card info-card customers-card">

							<div class="card-body">
								<h5 class="card-title">Employees <span>| By Role</span></h5>

								<div class="d-flex align-items-center">
									<div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
										<i class="bi bi-people"></i>
									</div>
									<div class="ps-3">
										<span class="small pt-1 fw-bold">@Model.AdminCount</span> <span class="text-muted small pt-2 ps-1">@(
										Model.AdminCount == 1 ? "administrator" : "administrators"
										)</span><br/>
										<span class="small pt-1 fw-bold">@Model.ProjectManagerCount</span> <span class="text-muted small pt-2 ps-1">@(
										Model.ProjectManagerCount == 1 ? "project manager" : "project managers"
										)</span><br/>
										<span class="small pt-1 fw-bold">@Model.DeveloperCount</span> <span class="text-muted small pt-2 ps-1">@(
										Model.DeveloperCount == 1 ? "developer" : "developers"
										)</span><br/>
										<span class="small pt-1 fw-bold">@Model.MemberCount</span> <span class="text-muted small pt-2 ps-1">@(
										Model.MemberCount == 1 ? "member" : "members"
										)</span>
									</div>
								</div>

							</div>
						</div>

					</div>
				}
				else
				{
					<div class="col-xxl-4 col-md-6">
						<div class="card info-card customers-card">

							<div class="card-body">
								<h5 class="card-title">Notifications <span>| Unseen</span></h5>

								<div class="d-flex align-items-center">
									<div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
										<i class="bi bi-envelope-fill"></i>
									</div>
									<div class="ps-3">
										<span class="small pt-1 fw-bold">@Model.Notifications.Where(n => !n.HasBeenSeen).Count()</span> <span class="text-muted small pt-2 ps-1">unread</span><br />
										<span class="small pt-1 fw-bold">@Model.Notifications.Where(n => n.NotificationType == NotificationType.NewProject).Count()</span> <span class="text-muted small pt-2 ps-1">new projects</span><br />
										<span class="small pt-1 fw-bold">@Model.Notifications.Where(n => n.NotificationType == NotificationType.NewTicket).Count()</span> <span class="text-muted small pt-2 ps-1">new tickets</span><br />
										<span class="small pt-1 fw-bold">@Model.Notifications.Where(n => n.NotificationType == NotificationType.Mention).Count()</span> <span class="text-muted small pt-2 ps-1">mentions</span><br />
									</div>
								</div>
							</div>

						</div>
					</div>
				}

				<!-- Project Status -->
				<div class="col-lg-12">
					<div class="card recent-sales overflow-auto">
						<div class="card-body">
							<h5 class="card-title">@(User.IsInRole(nameof(Roles.Admin)) ? "Project Status" : "Your Projects")</h5>
							<div class="table-responsive">
								<table class="table table-borderless datatable">
									<thead>
										<tr>
											<th scope="col">Project</th>
											<th scope="col">Manager</th>
											<th scope="col">Deadline</th>
											<th scope="col">Open Tickets</th>
										</tr>
									</thead>
									<tbody>
										@foreach (Project project in Model.ActiveProjects.OrderBy(p => p.Deadline))
										{
											AppUser? ProjectManager = await ProjectService.GetProjectManagerAsync(project.Id);

											<tr>
												<td class="align-middle"><a class="link" asp-controller="Projects" asp-action="ViewProject" asp-route-projectId="@project.Id">@project.Name</a></td>
												<td class="d-flex align-middle">
													<div class="d-flex">
														@if (ProjectManager is null)
														{
															<div class="flex-shrink-0">
																<img src="~/@FileService.GetDefaultUserPicPath()" class="rounded-circle" width="50" height="50">
															</div>
															<div class="flex-grow-1 align-self-center">
																<p class="card-text text-danger fw-bold ms-3">Unassigned!</p>
															</div>
														}
														else
														{
															<div class="flex-shrink-0">
																@if (ProjectManager.PictureData is not null)
																{
																	<img src="data:image/*;base64,@(Convert.ToBase64String(ProjectManager.PictureData))" class="rounded-circle" width="50" height="50">
																}
																else
																{
																	<img src="~/@FileService.GetDefaultUserPicPath()" class="rounded-circle" width="50" height="50">
																}
															</div>
															<div class="flex-grow-1 align-self-center">
																<p class="card-text ms-3"><a asp-controller="Company" asp-action="ViewEmployee" asp-route-userId="@ProjectManager.Id">@ProjectManager.FullName</a></p>
															</div>
														}
													</div>
												</td>
												<td class="align-middle">@project.Deadline.ToShortDateString() (@((project.Deadline - DateTime.Now).Days) days)</td>
												<td class="align-middle">@project.Tickets.Where(t => !t.IsArchived && t.TicketStatusId != "complete").Count()</td>
											</tr>
										}
									</tbody>
								</table>
							</div>
						</div>
					</div>
				</div>

				<!-- Recent Tickets -->
				<div class="col-12">
					<div class="card recent-sales overflow-auto">

						<div class="card-body">
							<h5 class="card-title">@(User.IsInRole(nameof(Roles.Admin)) ? "Recent Tickets" : "Your Tickets")</h5>
							<div class="table-responsive">
								<table class="table table-borderless datatable">
									<thead>
										<tr>
											<th scope="col">Ticket Name</th>
											<th scope="col">Project</th>
											<th scope="col">Assigned To</th>
											<th scope="col">Type</th>
											<th scope="col">Priority</th>
											<th scope="col">Status</th>
										</tr>
									</thead>
									<tbody>
										@foreach (Ticket ticket in Model.OpenTickets.OrderByDescending(t => t.Created))
										{
											<tr>
												<td class="align-middle"><a asp-controller="Tickets" asp-action="ViewTicket" asp-route-ticketId="@ticket.Id"><i class="bi bi-ticket-detailed-fill me-2"></i>@ticket.Title</a></td>
												<td class="align-middle"><a asp-controller="Projects" asp-action="ViewProject" asp-route-projectId="@ticket.Project!.Id">@ticket.Project!.Name</a></td>
												<td class="d-flex align-middle">
													<div class="d-flex">
														@if (ticket.Developer is null)
														{
															<div class="flex-shrink-0">
																<img src="~/@FileService.GetDefaultUserPicPath()" class="rounded-circle" width="50" height="50">
															</div>
															<div class="flex-grow-1 align-self-center">
																<p class="card-text text-danger fw-bold ms-3">Unassigned!</p>
															</div>
														}
														else
														{
															<div class="flex-shrink-0">
																@if (ticket.Developer.PictureData is not null)
																{
																	<img src="data:image/*;base64,@(Convert.ToBase64String(ticket.Developer.PictureData))" class="rounded-circle" width="50" height="50">
																}
																else
																{
																	<img src="~/@FileService.GetDefaultUserPicPath()" class="rounded-circle" width="50" height="50">
																}
															</div>
															<div class="flex-grow-1 align-self-center">
																<p class="card-text ms-3"><a asp-controller="Company" asp-action="ViewEmployee" asp-route-userId="@ticket.Developer.Id">@ticket.Developer.FullName</a></p>
															</div>
														}
													</div>
												</td>
												<td class="align-middle">@ticket.Type!.Description</td>
												<td class="align-middle">@ticket.Priority!.Description</td>
												<td class="align-middle">@ticket.Status!.Description</td>
											</tr>
										}
									</tbody>
								</table>
							</div>
						</div>
					</div>
				</div>

				@if (User.IsInRole(nameof(Roles.Admin)))
				{
					<!-- Workloads -->
					<div class="col-12">
						<div class="card top-selling overflow-auto">

							<div class="card-body pb-0">
								<h5 class="card-title">Workloads</h5>
								<div class="table-responsive">
									<table class="table table-borderless datatable">
										<thead>
											<tr>
												<th scope="col">Employee</th>
												<th scope="col">Job Title</th>
												<th scope="col">Active Projects</th>
												<th scope="col">Open Tickets</th>
											</tr>
										</thead>
										<tbody>
											@foreach (AppUser employee in Model.Employees)
											{
												<tr>
													<td>
														<div class="d-flex">
															<div class="flex-shrink-0">
																@if (employee.PictureData is not null)
																{
																	<img src="data:image/*;base64,@(Convert.ToBase64String(employee.PictureData))" class="rounded-circle" width="50" height="50">
																}
																else
																{
																	<img src="~/@FileService.GetDefaultUserPicPath()" class="rounded-circle" width="50" height="50">
																}
															</div>
															<div class="flex-grow-1 align-self-center">
																<p class="card-text ms-3"><a asp-controller="Company" asp-action="ViewEmployee" asp-route-userId="@employee.Id">@employee.FullName</a></p>
															</div>
														</div>
													</td>
													<td>@employee.JobTitle</td>
													<td>@Model.ActiveProjects.Where(p => p.Team.Contains(employee) || p.ProjectManagerId == employee.Id).Count()</td>
													<td>@Model.OpenTickets.Where(t => t.Project!.ProjectManagerId == employee.Id || t.DeveloperId == employee.Id).Count()</td>
												</tr>
											}
										</tbody>
									</table>
								</div>
							</div>

						</div>
					</div>
				}

			</div>
		</div>

	</div>
</section>
