@using BugBanisher.Models.ViewModels

@inject UserManager<AppUser> UserManager
@inject IFileService FileService

@model ProjectListViewModel

@{
    int pageNumber = int.Parse(Model.PageNumber);
    int perPage = int.Parse(Model.PerPage);
    int numberOfPages = (Model.Projects.Count / perPage) + 1;

    bool canPrevPage = pageNumber > 1;
    bool canNextPage = pageNumber < numberOfPages;

    IEnumerable<Project> sortedProjects = Model.SortBy switch
    {
        "Open Tickets" => Model.Projects.OrderBy(p => p.Tickets.Count),
        "Due Date" => Model.Projects.OrderBy(p => p.Deadline),
        "Project Manager" => Model.Projects.OrderBy(p => p.ProjectManagerId),
        "Project Name" or _ => Model.Projects.OrderBy(p => p.Name),
    };
}

<div class="pagetitle">
    <h1>@Model.ActiveOrArchived Projects</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">Projects</li>
            <li class="breadcrumb-item active">@Model.ActiveOrArchived</li>
        </ol>
    </nav>
</div>


<form asp-controller="Projects" asp-action="List@(Model.ActiveOrArchived)Projects" method="get" class="row mb-3 align-items-end">

    <div class="col-12">
        <span>Sort by:</span>
        <select class="d-block" asp-items="@Model.SortByOptions" asp-for="SortBy">
        </select>
        <span>Per page:</span>
        <select class="d-block" asp-items="@Model.PerPageOptions" asp-for="PerPage">
        </select>
    </div>
    
    <div class="col-12 mt-3">
        <button class="btn btn-sm btn-success" type="submit" asp-action="List@(Model.ActiveOrArchived)Projects"
                asp-route-sortBy="@Model.SortBy" asp-route-pageNumber="@Model.PageNumber" asp-route-perPage="@Model.PerPage">
            Go
        </button>
    </div>

</form>

@foreach (Project project in sortedProjects.Skip((pageNumber - 1) * perPage).Take(perPage))
{
    AppUser? projectManager = await UserManager.FindByIdAsync(project.ProjectManagerId);

    List<Ticket> openTickets = project.Tickets.Where(t => t.TicketStatusId != "complete" && !t.IsArchived).ToList();

    int unassignedTickets = openTickets.Where(t => t.DeveloperId == null || t.TicketStatusId == "pending").Count();
    int onHoldTickets = openTickets.Where(t => t.TicketStatusId == "hold").Count();
    int priorityTickets = openTickets.Where(t => t.TicketPriorityId == "high").Count();

    string ticketSummary = $"{openTickets.Count} open ({unassignedTickets} unassigned, {onHoldTickets} on hold, {priorityTickets} high priority)";

    <div class="row mb-1">
        <div class="card col-md-8">
            <div class="card-body">
                <div class="row d-flex align-items-center justify-content-start mt-3">
                    <div class="col-4 col-md-2">
                        <a asp-controller="Projects" asp-action="ViewProject" asp-route-projectId="@project.Id">
                            @if (project.PictureData is not null)
                            {
                                <img class="img-fluid" style="max-height: 100px;" src="data:image/*;base64,@Convert.ToBase64String(project.PictureData)"/>
                            }
                            else
                            {
                                <img class="img-fluid" style="max-height: 100px;" src="@FileService.GetDefaultProjectPicPath()"/>
                            }
                        </a>
                        </div>
                        <div class="col-8 col-md-5">
                            <strong>Project Name:</strong>
                            <a asp-controller="Projects" asp-action="ViewProject" asp-route-projectId="@project.Id">
                                <h5 class="card-text">@project.Name</h5>
                            </a>
                        </div>
                        <div class="col-12 col-md-5 mt-3 mb-2 mt-md-0 mb-md-0">
                            @if (projectManager is not null)
                            {
                                <span><strong>Project Manager:</strong></span>
                                <div class="d-flex align-items-center">
                                    <div class="flex-shrink-0 mt-2">
                                    @if (projectManager.PictureData is not null)
                                    {
                                        <img src="data:image/*;base64,@(Convert.ToBase64String(projectManager.PictureData))" class="rounded-circle align-self-center ms-1 me-1" width="60" height="60">
                                    }
                                    else
                                    {
                                        <img src="~/@FileService.GetDefaultUserPicPath()" class="rounded-circle align-self-center ms-1 me-1" width="60" height="60">
                                    }
                                    </div>
                                    <div class="flex-grow-1 ms-3">
                                        <span><a asp-controller="Company" asp-action="ViewEmployee" asp-route-userId="@projectManager.Id">@projectManager.FullName</a></span>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <span><strong>Project Manager:</strong></span>
                                <div class="d-flex align-items-center">
                                    <div class="flex-shrink-0 mt-2">
                                        <img class="rounded-circle align-self-center ms-1 me-1" width="60" height="60" src="~/@(FileService.GetDefaultUserPicPath())" />
                                    </div>
                                    <div class="flex-grow-1 ms-3">
                                        <span class="fw-bold text-danger">Unassigned!</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="row d-flex align-items-end justify-content-start">
                        <div class="col col-md-6">
                            <p class="card-text mt-3">Deadline: @project.Deadline.ToShortDateString() - @((project.Deadline - DateTime.Now).Days) days remaining</p>
					        <div class="progress mt-0">
					        @{
						        float daysUsed = (DateTime.Now - project.Created).Days;
						        float totalDays = (project.Deadline - project.Created).Days;
						        float percentComplete = (daysUsed / totalDays) * 100;
					        }
						        <div class="progress-bar progress-bar-striped" role="progressbar" style="width: @(percentComplete)%" aria-valuenow="@percentComplete" aria-valuemin="0" aria-valuemax="100"></div>
					        </div>
                        </div>
                        <div class="col col-md-6">
                            <p class="card-text"><strong>Tickets: </strong>@ticketSummary</p>
                        </div>
                        </div>
                </div>
            </div>
    </div>
}

<p class="text-muted">
    @{
        int startingEntry = sortedProjects.Count() == 0 ? 0 : (pageNumber - 1) * perPage + 1;
        int endingEntry = Math.Min(sortedProjects.Count(), startingEntry + perPage - 1);
    }
    Showing @startingEntry to @endingEntry of @(sortedProjects.Count())
</p>

@if (sortedProjects.Count() > perPage)
{
    @if (canPrevPage)
    {
        <a class="btn btn-sm btn-outline-info" asp-action="List@(Model.ActiveOrArchived)Projects"
        asp-route-sortBy="@Model.SortBy" asp-route-pageNumber="@(pageNumber-1)" asp-route-perPage="@Model.PerPage">
            Prev
        </a>
    }

    @if (pageNumber > 4)
    {
        <span class="ms-2">...</span>
    }

    @for (int i = Math.Max(pageNumber - 3, 1); i <= Math.Min(pageNumber + 3, numberOfPages); i++)
    {
        string active = i == pageNumber ? "btn-info" : "btn-outline-info";

        <a class="btn btn-sm @active ms-2" type="button" asp-action="List@(Model.ActiveOrArchived)Projects"
        asp-route-sortBy="@Model.SortBy" asp-route-pageNumber="@i" asp-route-perPage="@Model.PerPage">
            @i
        </a>
    }

    @if (pageNumber < numberOfPages - 3)
    {
        <span class="ms-2">...</span>
    }

    @if (canNextPage)
    {
        <a class="btn btn-sm btn-outline-info ms-2" asp-action="List@(Model.ActiveOrArchived)Projects"
        asp-route-sortBy="@Model.SortBy" asp-route-pageNumber="@(pageNumber+1)" asp-route-perPage="@Model.PerPage">
            Next
        </a>
    }
}
