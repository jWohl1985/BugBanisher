@inject IProjectService ProjectService

@model Project

@{
	AppUser? projectManager = await ProjectService.GetProjectManagerAsync(Model.Id);
	string textFormatting = projectManager is not null ? "" : "text-danger";

	List<AppUser> developers = await ProjectService.GetDevelopersOnProjectAsync(Model.Id);
	List<AppUser> members = await ProjectService.GetMembersOnProjectAsync(Model.Id);
}

<div class="pagetitle">
	<h1>Project: @Model.Name</h1>
	<nav>
		<ol class="breadcrumb">
			<li class="breadcrumb-item">Projects</li>
			<li class="breadcrumb-item">Active</li>
			<li class="breadcrumb-item active">@Model.Name</li>
		</ol>
	</nav>
</div>

<div class="row">
	<div class="col-lg-6">
		<div class="card">
			<div class="card-header">
				<h5 class="card-text">Project Info</h5>
			</div>
			<div class="card-body">
				<p class="card-text mt-3">Project Name:<br/><strong>@Model.Name</strong></p>
				<p class="card-text">Description:<br/>@Model.Description</p>
				<p class="card-text">Created:<br/>@Model.Created.ToShortDateString()</p>
				<p class="card-text">Deadline:<br/>@Model.Deadline.ToShortDateString()</p>
			</div>
		</div>
	</div>

	<div class="col-lg-6">
	<div class="card">
			<div class="card-header">
				<h5 class="card-text">Project Team</h5>
			</div>
			<div class="card-body">

				<!-- Project Manager -->
				<p class="card-text mt-3"><strong>Project Manager:</strong></p>
				<div class="row d-flex justify-content-start align-items-center">
					<div class="col-3 col-lg-1">
						<img class="img-fluid rounded-circle" width="50" height="50" src="data:img/*;base64,@Convert.ToBase64String(projectManager.PictureData)">
					</div>
					<div class="col-9 col-lg-11">
						<p class="card-text @textFormatting">@(projectManager is not null ? projectManager.FullName : "Unassigned")</p>
					</div>
				</div>
				
				<hr />

				<!-- Developers -->
				<p class="card-text mt-3"><strong>Developers:</strong></p>
				@if (developers.Count == 0)
				{
					<p class="card-text">No developers are assigned to this project.</p>
				}
				@foreach (AppUser developer in developers)
				{
					<div class="row d-flex justify-content-start align-items-center">
						<div class="col-3 col-lg-1">
							<img class="img-fluid rounded-circle" width="50" height="50" src="data:img/*;base64,@Convert.ToBase64String(developer.PictureData)">
						</div>
						<div class="col-9 col-lg-11">
							<p class="card-text">@developer.FullName</p>
						</div>
					</div>
				}

				<hr/>

				<!-- Members -->
				<p class="card-text mt-3"><strong>Members:</strong></p>
				@if (members.Count == 0)
				{
					<p class="card-text">No members are assigned to this project.</p>
				}
				@foreach (AppUser member in members)
				{
					<div class="row d-flex justify-content-start align-items-center">
						<div class="col-3 col-lg-1">
							<img class="img-fluid rounded-circle" width="50" height="50" src="data:img/*;base64,@Convert.ToBase64String(member.PictureData)">
						</div>
						<div class="col-9 col-lg-11">
							<p class="card-text">@member.FullName</p>
						</div>
					</div>
				}

			</div>
		</div>
	</div>
	
</div>
